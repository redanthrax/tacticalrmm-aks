apiVersion: v1
kind: Service
metadata:
  name: tactical-nginx
  namespace: tacticalrmm
  labels:
    app: trmm
spec:
  selector:
    app: tactical-nginx
  ports:
    - port: 443
      name: "nginxport"

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: tactical-nginx
  namespace: tacticalrmm
  labels:
    app: tactical-nginx
  annotations:
    rollme: {{ randAlphaNum 5 | quote }} #added to roll certs every upgrade
spec:
  replicas: 1
  selector:
    matchLabels:
      lbtype: external
  template:
    metadata:
      labels:
        app: tactical-nginx
        lbtype: external
    spec:
      containers:
        - name: tactical-nginx
          image: "{{ .Values.containerRegistry }}.azurecr.io/tactical-nginx:{{ .Values.image.tag }}"
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
              name: "8080-nginx"
            - containerPort: 4443
              name: "4433-nginx"
          env:
            - name: APP_HOST
              valueFrom:
                secretKeyRef:
                  name: rmmurl
                  key: rmmurlkey
            - name: API_HOST
              valueFrom:
                secretKeyRef:
                  name: apiurl
                  key: apiurlkey
            - name: MESH_HOST
              valueFrom:
                secretKeyRef:
                  name: meshurl
                  key: meshurlkey
            - name: NGINX_RESOLVER
              value: "kube-dns.kube-system.svc.cluster.local"
            - name: BACKEND_SERVICE
              value: tactical-backend.tacticalrmm.svc.cluster.local
            - name: FRONTEND_SERVICE
              value: tactical-frontend.tacticalrmm.svc.cluster.local
            - name: MESH_SERVICE
              value: tactical-meshcentral.tacticalrmm.svc.cluster.local
            - name: WEBSOCKETS_SERVICE
              value: tactical-websockets.tacticalrmm.svc.cluster.local
            - name: NATS_SERVICE
              value: tactical-nats.tacticalrmm.svc.cluster.local
            - name: CERT_PUB_KEY
              valueFrom:
                secretKeyRef:
                  name: trmmcert
                  key: trmmcertkey
            - name: CERT_PRIV_KEY
              valueFrom:
                secretKeyRef:
                  name: trmmkey
                  key: trmmkeykey
          volumeMounts:
            - name: storage
              mountPath: /opt/tactical
            - name: trmm-secretstore-inline
              mountPath: /mnt/secrets-store
              readOnly: true
      volumes:
        - name: storage
          persistentVolumeClaim:
            claimName: shared-storage
        - name: trmm-secretstore-inline
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: "trmm-secretstore"
